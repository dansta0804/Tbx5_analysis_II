#!/bin/perl

# The program takes as an input one fasta file and shuffles each sequence
# in the data set. The program also expands the data set by running a loop
# with 30 iterations.

# Program call: ./shuffle_seq fasta_filename

use warnings;
use strict;
use File::Basename;
srand(1);

sub shuffle_sequence {
    my ($sequence) = @_;
    my @splt_sequence = split('', $sequence);
    my @shuffled_seq;

    for my $iter (0..$#splt_sequence) {
        push(@shuffled_seq, splice(@splt_sequence,
            int(rand(scalar @splt_sequence)), 1));
    }
    chomp($sequence);
    # print "1st seq: ", $sequence, "\n",
    #     "2nd seq: ", join('', @shuffled_seq), "\n\n";
    return join('', @shuffled_seq);
}

my $filename = $ARGV[0];
my $file = basename($filename);
my $PATH = "/home/daniele/Desktop/Darbas/Tbx5_analysis_cont/" .
           "Inputs/Shuffled_FASTA/";
my $header = 0;

open(my $file_write, '>>', $PATH . $file ) or die;

my $datetime = localtime();  
print $datetime, "\n"; 

foreach(1..30) {
    my $sequence = '';
    open(my $file_read, '<', $filename) or die;
    while(<$file_read>) {
        if ($_ =~ /^>/) {
            $header = $header + 1;
            print $file_write ">$header\n";
            if ($header % 60000 == 0) { print ">$header\n"; }
            next;
        }
        elsif ($_ =~ /^[ACGTacgt]+\n?/) {
            $sequence = $_;
            $sequence =~ tr/acgtn/ACGTN/;
            chomp($sequence);
            my $shuffled_seq = shuffle_sequence($sequence);
            print $file_write "$shuffled_seq\n";
            #print "$shuffled_seq\n";
            next;
        }
        else { print $file_write $_; }
    }
    close($file_read);
}
close($file_write);
print $datetime, "\n";